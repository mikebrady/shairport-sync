<?xml version="1.0"?><!--*-nxml-*-->
<!DOCTYPE manpage SYSTEM "xmltoman.dtd">
<?xml-stylesheet type="text/xsl" href="xmltoman.xsl" ?>

  <!--
  This man pager source file is part of shairport-sync.
  Copyright (c) Mike Brady 2014-2015

  All rights reserved.
 
  Permission is hereby granted, free of charge, to any person
  obtaining a copy of this software and associated documentation
  files (the "Software"), to deal in the Software without
  restriction, including without limitation the rights to use,
  copy, modify, merge, publish, distribute, sublicense, and/or
  sell copies of the Software, and to permit persons to whom the
  Software is furnished to do so, subject to the following conditions:
 
  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Software.
 
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
  OTHER DEALINGS IN THE SOFTWARE.
  -->

  <manpage name="shairport-sync" section="7" desc="Synchronised Audio Player for iTunes / AirPlay">

	<synopsis>
	<!--
      <cmd>shairport-sync <opt>-D</opt> <arg>interface</arg></cmd>
  -->
      <cmd>shairport-sync  <opt>[-dvw]</opt>
      <opt>[-a </opt><arg>name</arg><opt>]</opt>
      <opt>[-A </opt><arg>latency</arg><opt>]</opt>
      <opt>[-B </opt><arg>command</arg><opt>]</opt>
      <opt>[-c </opt><arg>configurationfile</arg><opt>]</opt>
      <opt>[-E </opt><arg>command</arg><opt>]</opt>
      <opt>[--forkedDaapdLatency=</opt><arg>latency</arg><opt>]</opt>
      <opt>[--get-cover-art]</opt>
      <opt>[-i </opt><arg>latency</arg><opt>]</opt>
      <opt>[-L </opt><arg>latency</arg><opt>]</opt>
      <opt>[-m </opt><arg>backend</arg><opt>]</opt>
      <opt>[--meta-dir=</opt><arg>directory</arg><opt>]</opt>
      <opt>[-o </opt><arg>backend</arg><opt>]</opt>
      <opt>[--password=</opt><arg>secret</arg><opt>]</opt>
      <opt>[-r </opt><arg>threshold</arg><opt>]</opt>
      <opt>[--statistics]</opt>
      <opt>[-S </opt><arg>mode</arg><opt>]</opt>
      <opt>[-t </opt><arg>timeout</arg><opt>]</opt>
      <opt>[--tolerance=</opt><arg>frames</arg><opt>]</opt>
      <opt>[-- </opt><arg>audio_backend_options</arg><opt>]</opt>
      </cmd>
      <cmd>shairport-sync <opt>-D</opt></cmd>
      <cmd>shairport-sync <opt>-h</opt></cmd>
      <cmd>shairport-sync <opt>-k</opt></cmd>
      <cmd>shairport-sync <opt>-h</opt></cmd>
      <cmd>shairport-sync <opt>-R</opt></cmd>
      <cmd>shairport-sync <opt>-V</opt></cmd>
	</synopsis>

  <description>
    <p>shairport-sync  plays  audio  streamed  from  iTunes or from an AirPlay
    device to an ALSA-compatible audio output device.</p>

    <p> A feature of shairport-sync is that the audio is played synchronously.
    This means that if many devices are playing the same stream at the same
    time, all the outputs will stay in step with one another.
    This allows multiple devices play the same source without getting out of phase with one another,
    enabling, for example, simultaneous multi-room operation.
    </p>
    
    <p>shairport-sync can additionally be compiled and configured to stream raw audio to a pipe or to stdout.</p>
    
    <p>Settings can be made using the configuration file (recommended for all new installations) or by using command-line options.</p>
 
	</description>
	
	<section name="Configuration File Settings">
	   <p>You should use the configuration file for setting up shairport-sync.
	  This file is normally <file>/etc/shairport-sync.conf</file>.
	  You may need to have root privileges to modify it.</p>
	  
	  <p>Settings are organised into <i>groups</i>, for example, there is a "general" group of
	  standard settings, and there is an "alsa" group with settings that pertain to the ALSA
	  back end. Here is an example of a typical configuration file:</p>
	  
	  <p><opt>general = {</opt></p>
    <p><p><opt>name = "Mike's Boombox";</opt></p></p>
    <p><p><opt>interpolation = "soxr";</opt></p></p>
    <p><p><opt>password = "secret";</opt></p></p>
    <p><opt>};</opt></p>
    <p><opt></opt></p>
    <p><opt>alsa = {</opt></p>
    <p><p><opt>output_device = "hw:0";</opt></p></p>
    <p><p><opt>mixer_control_name = "PCM";</opt></p></p>
    <p><opt>};</opt></p>
	  
	  <p>Most settings have sensible default values, so -- as in the example above -- users generally only need to set (1) the service name, (2) a password (if desired) and
	  (3) the output device. If the output device has a mixer that can be used for volume control, then (4) the volume control's name should be specificed. It is highly desirable to use the output device's mixer for volume control, if available -- response time is reduced to zero and the processor load is reduced. In the example above, "soxr" interpolation was also enabled.</p>
	  
	  <p>A sample configuration file with all possible settings, but with all of them commented out, is installed at <file>/etc/shairport-sync.conf.sample</file>.</p>
	  
	  <p>To retain backwards compatability with previous versions of shairport-sync
	  you can use still use command line options, but any new features, etc. will
	  be available only via configuration file settings.</p>

	  <p>The configuration file is processed using the <file>libconfig</file> library
	  -- see <url href="http://www.hyperrealm.com/libconfig/libconfig_manual.html"/>.</p>

    <option><p><opt>"GENERAL" SETTINGS</opt></p></option>
    <p>These are the settings available within the <opt>general</opt> group:</p>

    <option>
		<p><opt>name=</opt><arg>"service_name"</arg><opt>;</opt></p>
		<optdesc>
		Use this <arg>service_name</arg> to identify this player in iTunes, etc.
    The default name is "Shairport Sync on &lt;hostname&gt;".
    </optdesc>
	  </option>
	  
	  <option>
    <p><opt>password=</opt><arg>"password"</arg><opt>;</opt></p>
    <optdesc>Require the password <arg>password</arg> to connect to the service. If you leave this setting commented out, no password is needed.</optdesc>
    </option>
    <option>
    <p><opt>interpolation=</opt><arg>"mode"</arg><opt>;</opt></p>
    <optdesc>Interpolate, or "stuff", the audio stream using the <arg>mode</arg>.  Interpolation here refers to the
    process of adding or removing frames of audio  to  or  from  the
    stream sent to the output device to keep it exactly in synchrony
    with the player.
    The default mode, "basic", is normally almost  completely  inaudible.
    The  alternative mode, "soxr", is even less obtrusive but
    requires much more processing power. For this mode, support for
    libsoxr, the SoX Resampler Library, must be selected when
    shairport-sync is compiled.
		</optdesc>
    </option>
    
    <option>
    <p><opt>statistics=</opt><arg>"setting"</arg><opt>;</opt></p>
    <optdesc>Use this <arg>setting</arg> to enable ("yes") or disable ("no") the output of some statistical information on the console or in the log. The default is to disable statistics.</optdesc>
    </option>

    <option>
    <p><opt>mdns_backend=</opt><arg>"backend"</arg><opt>;</opt></p>
    <optdesc>shairport-sync has a number of modules of code ("backends") for interacting with the mDNS service to be used to advertise itself. Normally, the first mDNS backend that works is selected. This setting forces the selection of the specific mDNS <arg>backend</arg>. The default is "avahi". Perform the command <opt>shairport-sync -h</opt> to get a list of available mDNS modules.</optdesc>
    </option>
    <option>
    <p><opt>output_backend=</opt><arg>"backend"</arg><opt>;</opt></p>
    <optdesc>shairport-sync has a number of modules of code ("backends") through which audio is output. Normally, the first audio backend that works is selected. This setting forces the selection of the specific audio <arg>backend</arg>. The default is "alsa". Perform the command <opt>shairport-sync -h</opt> to get a list of available audio backends. Only the alsa backend supports synchronisation.</optdesc>
    </option>
    <option>
    <p><opt>port=</opt><arg>portnumber</arg><opt>;</opt></p>
    <optdesc>Use this to specify the <arg>portnumber</arg> shairport-sync uses to listen for service requests from iTunes, etc. The default is port 5000.</optdesc>
    </option>
    <option>
    <p><opt>udp_port_base=</opt><arg>portnumber</arg><opt>;</opt></p>
    <optdesc>When shairport-sync starts to play audio, it establises three UDP connections to the audio source. Use this setting to specify the starting <arg>portnumber</arg> for these three ports. It will pick the first three unused ports starting from <arg>portnumber</arg>. The default is port 6001.</optdesc>
    </option>
    <option>
    <p><opt>udp_port_range=</opt><arg>range</arg><opt>;</opt></p>
    <optdesc>Use this in conjunction with the prevous setting to specify the <arg>range</arg> of ports that can be checked for availability. Only three ports are needed. The default is 100, thus 100 ports will be checked from port 6001 upwards until three are found.</optdesc>
    </option>
    <option>
    <p><opt>drift=</opt><arg>frames</arg><opt>;</opt></p>
    <optdesc>Allow playback to drift up to <arg>frames</arg> out of exact synchronization before attempting to correct it.
		The default is 88 frames, i.e. 2 ms. The smaller the tolerance, the more likely it is that overcorrection will occur.
		Overcorrection is when more corrections (insertions and deletions) are made than are strictly necessary to keep the stream in sync. Use the <opt>statistics</opt> setting to
		monitor correction levels. Corrections should not greatly exceed net corrections.
		</optdesc>
    </option>
    <option>
    <p><opt>resync_threshold=</opt><arg>threshold</arg><opt>;</opt></p>
    <optdesc>Resynchronise if timings differ by more than <arg>threshold</arg> frames.
    If the output timing differs from the source timing by more than
    the threshold, output will be muted and a full resynchronisation
    will occur. The default threshold is 2,205 frames, i.e. 50
    milliseconds. Specify 0 to disable resynchronisation.</optdesc>
    </option>
    <option>
    <p><opt>log_verbosity=</opt><arg>0</arg><opt>;</opt></p>
    <optdesc>Use this to specify how much debugging information should be output or logged. "0" means no debug information, "3" means most debug information. The default is "0".</optdesc>
    </option>
    <option>
    <p><opt>ignore_volume_control=</opt><arg>"choice"</arg><opt>;</opt></p>
    <optdesc>Set this <arg>choice</arg> to "yes" if you want the volume to be at 100% no matter what the source's volume control is set to. This might be useful if you want to set the volume on the output device, independently of the setting at the source. The default is "no".</optdesc>
    </option>
    
    <option>
    <p><opt>volume_range_db=</opt><arg>dBvalue</arg><opt>;</opt></p>
    <optdesc>Set this <arg>dBvalue</arg> to use just a portion of the full range of attenuation offered by a mixer.
    For example, if a mixer has a minimum volume of -80 dB and a maximum of +20 dB, you might wish to use only 60 dB of the 100 dB available.
    This might be because the sound becomes inaudible at the lowest setting and unbearably loud at the highest setting --
    indeed, many domestic HiFi systmes have a volume copntrol range of just 60 to 80dB.
    Another potential use might be where the range specified by the mixer does not match the capabilities of the device.
    For example, the Raspberry Pi's DAC that feeds the built-in audio jack claims a range of 106 dB but has a useful range of only about 35dB.
    The setting allows you to specify the maximum range from highest to lowest.
    The range suggested for the Raspberry Pi's built-in audio DAC, which feeds the headphone jack, is 35.
    Using it in this case gives the volume control a much more useful range of settings.
    If you omit this setting, the full "native" range of the mixer is used.</optdesc>
    </option>
    
    <option><p><opt>"ALSA" SETTINGS</opt></p></option>
    <p>These settings are for the ALSA back end, used to communicate with audio output devices in the ALSA system.
    (By the way, you can use tools such as <opt>alsamixer</opt> or <opt>aplay</opt> to discover what devices are available.)
    Use these settings to select the output device and the mixer control to be used to control the output volume.
    You can additionally set the desired size of the output buffer and you can adjust overall latency. Here are the <opt>alsa</opt> group settings:</p>

    <option>
    <p><opt>output_device=</opt><arg>"output_device"</arg><opt>;</opt></p>
    <optdesc>Use the output device called <arg>output_device</arg>. The default is the device called "default".</optdesc>
    </option>
    <option>
    <option>
    <p><opt>mixer_control_name=</opt><arg>"name"</arg><opt>;</opt></p>
    <optdesc>Specify the <arg>name</arg> of the mixer control to be used by shairport-sync to control the volume.
    The mixer control must be on the mixer device, which by default is the output device.
    If you do not specify a mixer control name, shairport-sync will adjust the volume in software.</optdesc>
    </option>
    <p><opt>mixer_type=</opt><arg>"mixer_type"</arg><opt>;</opt></p>
    <optdesc>This setting is deprecated and is ignored. For your information, its functionality has been automatically incorporated in the mixer_control_name setting
  -- if you specify a mixer name with the mixer_control_name setting, it is assumed that the mixer is implemented in hardware.</optdesc>
    </option>
    <option>
    <p><opt>mixer_device=</opt><arg>"mixer_device"</arg><opt>;</opt></p>
    <optdesc>By default, the mixer is assumed to be output_device. Use this setting to specify a device other than the output device.</optdesc>
    </option>
    <option>
    <p><opt>audio_backend_latency_offset=</opt><arg>offset</arg><opt>;</opt></p>
    <optdesc>Set this <arg>offset</arg>, in frames, to compensate for a fixed delay in the audio back end.
    For example, if the output device delays by 100 ms, set this to -4410.</optdesc>
    </option>
    <option>
    <p><opt>audio_backend_buffer_desired_length=</opt><arg>length</arg><opt>;</opt></p>
    <optdesc>Use this to set the desired number frames to be in the output device's hardware output buffer.
    The default is 6,615 frames, or 0.15 seconds. If set too small, buffer underflow may occur on low-powered machines.
    If too large, the response times when using software volume control (i.e. when not using a mixer control to control volume) become annoying,
    or it may exceed the hardware buffer size.
    It may need to be larger on low-powered machines that are also performing other tasks, such as processing metadata.</optdesc>
    </option>
    
    <option><p><opt>"PIPE" SETTINGS</opt></p></option>
    <p>These settings are for the PIPE backend, used to route audio to a named unix pipe. The audio is in raw CD audio format: PCM 16 bit little endian, 44,100 samples per second,
    stereo.</p>
    <p>Use the <arg>name</arg> setting to set the name and location of the pipe.</p>
    <p>There are two further settings affecting timing that might be useful if the pipe reader is, for example,
    a program to play an audio stream such as <opt>aplay</opt>. The <arg>audio_backend_latency_offset</arg> affects precisely when the first audio packet is sent
    and the <arg>audio_backend_buffer_desired_length</arg> setting affects the nominal output buffer size.</p>
    <p>These are the settings available within the <opt>pipe</opt> group:</p>

    <option>
    <p><opt>name=</opt><arg>"/path/to/pipe"</arg><opt>;</opt></p>
    <optdesc>Use this to specify the name and location of the pipe. The pipe will be created and opened when shairport-sync starts up and will be closed upon shutdown.
    Frames of audio will be sent to the pipe in packets of 352 frames and will be discarded if the pipe has not have a reader attached.
    The sender will wait for up to five seconds for a packet to be written before discarding it.</optdesc>
    </option>

    <option>
    <p><opt>audio_backend_latency_offset=</opt><arg>offset_in_frames</arg><opt>;</opt></p>
    <optdesc>
    Packets of audio frames are written to the pipe synchronously -- that is, they are written to at exactly the time they should be played.
    You can offset the time of initial audio output relative to its nominal time using this setting.
    For example to send an audio stream to the pipe 100 milliseconds before it is due to be played, set this to -4410. Default setting is 0.</optdesc>
    </option>
    
    <option>
    <p><opt>audio_backend_buffer_desired_length=</opt><arg>buffer_length_in_frames</arg><opt>;</opt></p>
    <optdesc>    
    Use this setting, in frames, to set the size of the output buffer. It works by determining how soon the second and subsequent packets of audio frames are sent to the pipe.
    For example, if you send the first packet of audio exactly when it is due and, using a <arg>audio_backend_buffer_desired_length</arg> setting of 44100,
    send subsequent packets of audio a second before they are due to be played, they will be buffered in the pipe reader's buffer, giving it a nominal buffer size of 44,100 frames.
    Note that if the pipe reader consumes audio packets faster or slower than they are supplied, the buffer will eventually empty or overflow --
    shairport-sync performs no stuffing or interpolation when writing to a pipe. Default setting is 44,100 frames.
    </optdesc>
    </option>
     
    <option><p><opt>"STDOUT" SETTINGS</opt></p></option>
    <p>These settings are for the STDOUT backend, used to route audio to standard output ("stdout").
    The audio is in raw CD audio format: PCM 16 bit little endian, 44,100 samples per second, stereo.</p>
    <p>There are two settings affecting timing that might be useful if the stdout reader is, for example,
    a program to play an audio stream such as <opt>aplay</opt>. The <arg>audio_backend_latency_offset</arg> affects precisely when the first audio packet is sent
    and the <arg>audio_backend_buffer_desired_length</arg> setting affects the nominal output buffer size.</p>
    <p>These are the settings available within the <opt>stdout</opt> group:</p>

    <option>
    <p><opt>audio_backend_latency_offset=</opt><arg>offset_in_frames</arg><opt>;</opt></p>
    <optdesc>
    Packets of audio frames are written to stdout synchronously -- that is, they are written at exactly the time they should be played.
    You can offset the time of initial audio output relative to its nominal time using this setting.
    For example to send an audio stream to stdout 100 milliseconds before it is due to be played, set this to -4410. Default setting is 0.</optdesc>
    </option>

    <option>
    <p><opt>audio_backend_buffer_desired_length=</opt><arg>buffer_length_in_frames</arg><opt>;</opt></p>
    <optdesc>    
    Use this setting, in frames, to set the size of the output buffer. It works by determining how soon the second and subsequent packets of audio frames are sent to stdout.
    For example, if you send the first packet of audio exactly when it is due and, using a <arg>audio_backend_buffer_desired_length</arg> setting of 44100,
    send subsequent packets of audio a second before they are due to be played, they will be buffered in the stdout reader's buffer, giving it a nominal buffer size of 44,100 frames.
    Note that if the stdout reader consumes audio packets faster or slower than they are supplied, the buffer will eventually empty or overflow --
    shairport-sync performs no stuffing or interpolation when writing to stdout. Default setting is 44,100 frames.
    </optdesc>
    </option>
    
    <option><p><opt>"AO" SETTINGS</opt></p></option>
    <p>These settings are for the AO backend, used for the libao audio library.</p>
    <p>There are two settings affecting timing. The <arg>audio_backend_latency_offset</arg> affects precisely when the first audio packet is sent
    and the <arg>audio_backend_buffer_desired_length</arg> setting affects the nominal output buffer size.</p>
    <p>These are the settings available within the <opt>ao</opt> group:</p>


    <option>
    <p><opt>audio_backend_latency_offset=</opt><arg>offset_in_frames</arg><opt>;</opt></p>
    <optdesc>
    Packets of audio frames are written to the libao system synchronously -- that is, they are written at exactly the time they should be played.
    You can offset the time of initial audio output relative to its nominal time using this setting.
    For example to send an audio stream to stdout 100 milliseconds before it is due to be played, set this to -4410. Default setting is 0.</optdesc>
    </option>
    
    <option>
    <p><opt>audio_backend_buffer_desired_length=</opt><arg>buffer_length_in_frames</arg><opt>;</opt></p>
    <optdesc>    
    Use this setting, in frames, to set the size of the output buffer. It works by determining how soon the second and subsequent packets of
    audio frames are sent to to the libao system.
    For example, if you send the first packet of audio exactly when it is due and, using a <arg>audio_backend_buffer_desired_length</arg> setting of 44100,
    send subsequent packets of audio a second before they are due to be played, they will be buffered in the stdout reader's buffer, giving it a nominal buffer size of 44,100 frames.
    Note that if the libao system consumes audio packets faster or slower than they are supplied, the buffer will eventually empty or overflow --
    shairport-sync performs no stuffing or interpolation when writing to libao. Default setting is 44,100 frames.
    </optdesc>
    </option>
    
    <option><p><opt>"METADATA" SETTINGS</opt></p></option>
    <p>shairport-sync can process metadata provided by the source, such as Track Number, Album Name, cover art, etc. and can provide additional metadata such as volume level,
    pause/resume, etc. It sends the metadata to a pipe, by default <file>/tmp/shairport-sync-metadata</file>.
    To process metadata, shairport-sync must have been compiled with metadata support included.
    You can check that this is so by running <opt>shairport-sync -V</opt>; the identification string will contain the word <opt>metadata</opt>.</p>
    <p>Please note that different sources provide different levels of metadata. Some provide a lot; some provide almost none.</p>
    <p>The <opt>metadata</opt> group of settings allow you to enable metadata handling and to control certain aspects of it:</p>


    <option>
    <p><opt>enabled=</opt><arg>"choice"</arg><opt>;</opt></p>
    <optdesc>Set the <arg>choice</arg> to "yes" to enable shairport-sync to look for metadata from the audio source and to forward it,
    along with metadata generated by shairport-sync itself, to the metadata pipe. The default is "no".</optdesc>
    </option>
    <option>
    <p><opt>include_cover_art=</opt><arg>"choice"</arg><opt>;</opt></p>
    <optdesc>Set the <arg>choice</arg> to "yes" to enable shairport-sync to look for cover art from the audio source and to include it in the feed to the metadata pipe.
    You must also enable metadata (see above).
    One reason for not including cover art is that the images can sometimes be very large and may delay transmission of subsequent metadata through the pipe.
    The default is "no".</optdesc>
    </option>
    <option>
    <p><opt>pipe_name=</opt><arg>"filepathname"</arg><opt>;</opt></p>
    <optdesc>Specify the absolute path name of the pipe through which metadata should be sent The default is <file>/tmp/shairport-sync-metadata</file>".</optdesc>
    </option>
    
    <option><p><opt>"SESSIONCONTROL" SETTINGS</opt></p></option>
    <p>shairport-sync can run programs just before it starts to play an audio stream and just after it finishes.
    You specify them using the sessioncontrol group settings run_this_before_play_begins and run_this_after_play_ends. </p>


    <option>
    <p><opt>run_this_before_play_begins=</opt><arg>"/path/to/application and args"</arg><opt>;</opt></p>
    <optdesc>Here you can specify a program and its arguments that will be run just before a play session begins. Be careful to include the full path to the application.
    The application must be marked as executable and, if it is a script, its first line must begin with the standard <file>#!/bin/...</file> as appropriate.</optdesc>
    </option>
    <option>
    <p><opt>run_this_after_play_ends=</opt><arg>"/path/to/application and args"</arg><opt>;</opt></p>
    <optdesc>Here you can specify a program and its arguments that will be run just after a play session ends. Be careful to include the full path to the application.
    The application must be marked as executable and, if it is a script, its first line must begin with the standard <file>#!/bin/...</file> as appropriate.</optdesc>
    </option>
    <option>
    <p><opt>wait_for_completion=</opt><arg>"choice"</arg><opt>;</opt></p>
    <optdesc>Set <arg>choice</arg> to "yes" to make shairport-sync wait until the programs specified in the <opt>run_this_before_play_begins</opt>
    and <opt>run_this_after_play_ends</opt> have completed execution before continuing. The default is "no".</optdesc>
    </option>
    <option>
    <p><opt>allow_session_interruption=</opt><arg>"choice"</arg><opt>;</opt></p>
    <optdesc>If <opt>choice</opt> is set to "yes", then another source will be able to interrupt an existing play session and start a new one.
    When set to "no" (the default), other devices attempting to interrupt a session will fail, receiving a busy signal.</optdesc>
    </option>
    <option>
    <p><opt>session_timeout=</opt><arg>seconds</arg><opt>;</opt></p>
    <optdesc>If a play session has been established and the source disappears without warning (such as a device going out of range of a network)
    then wait for <arg>seconds</arg> seconds before ending the session. Once the session has terminated, other devices can use it.
    The default is 120 seconds.</optdesc>
    </option>

     <option><p><opt>"LATENCIES" SETTINGS</opt></p></option>
     <p>The latencies settings are now deprecated. Do not use them for new installations. They will be removed from a future version of Shairport Sync.</p>
     <p>Latency is the exact time from a sound signal's original timestamp until that signal actually "appears" on the output of the audio output device,
     usually a Digital to Audio Converter (DAC), irrespective of any internal delays, processing times, etc. in the computer.</p>
     
     <p>Shairport Sync now sets latencies automatically using information supplied by the source, typically either 88,200 or 99,577 frames.</p>
          
    <p>The following relates to the old scheme of using fixed latencies, which ignores the latency information supplied by the source.
    There are four default latency settings. One latency matches the latency used by recent versions of
    iTunes when playing audio and another matches the latency
    used by so-called "AirPlay" devices, including iOS devices and iTunes and Quicktime Player when they are playing video.
    A third latency is used when the audio source is forked-daapd. The fourth latency is the default if no other latency is chosen and is used for older versions of iTunes.</p>
    <p>Note: If you are thinking of changing latencies to compensate for a delay in the audio output device, then
    instead of changing these individual latencies, consider using the <opt>audio_backend_latency_offset</opt> setting in the <opt>alsa</opt> group
    (or the appropriate other group if you're not outputing through the alsa backend).</p>


    <option>
    <p><opt>itunes=</opt><arg>latency</arg><opt>;</opt></p>
    <optdesc>This is the <arg>latency</arg>, in frames, used for iTunes 10 or later. Default is 99,400.</optdesc>
    </option>
    <option>
    <p><opt>airplay=</opt><arg>latency</arg><opt>;</opt></p>
   <optdesc>This is the <arg>latency</arg>, in frames, used for AirPlay devices, including iOS devices and iTunes and Quicktime Player when they are playing video. Default is 88,200.</optdesc>
    </option>
    <option>
    <p><opt>forkedDaapd=</opt><arg>latency</arg><opt>;</opt></p>
   <optdesc>This is the <arg>latency</arg>, in frames, used for forkedDaapd sources. Default is 99,400.</optdesc>
   </option>
    <option>
    <p><opt>default=</opt><arg>latency</arg><opt>;</opt></p>
   <optdesc>This is the <arg>latency</arg>, in frames, used when the source is unrecognised. Default is 88,200.</optdesc>
   </option>

     
	</section>

	<options>

    <p>Note: if you are setting up Shairport Sync for the first time or are updating an existing installation,
    you are encouraged to use the configuration file settings described above. Most of the options described below
    simply replicate the configuration settings and are retained to provide backward compatability with older installations of Shairport Sync.</p>
    
    <p>Many  of  the options take sensible default values, so you can normally
    ignore most of them. See the EXAMPLES section for typical usages.</p>

    <p>The command line for shairport-sync can take two kinds of options:
    regular <opt>program options</opt> and <opt>audio backend options</opt>.
    Program options are
    always listed first, followed by any audio backend options, preceded by
    a <opt>--</opt> symbol.</p>
    
  <section name="Program Options">
  <p>These options are used by shairport-sync itself.</p>
  </section>
  
	  <option>
		<p><opt>-a </opt><arg>service name</arg><opt> | --name=</opt><arg>service name</arg></p>
		<optdesc><p>
		Use this <arg>service name</arg> to identify this player in iTunes, etc.
    The default name is "Shairport Sync on &lt;hostname&gt;".
    </p></optdesc>
	  </option>

	  <option>
		<p><opt>-A | --AirPlayLatency=</opt><arg>latency</arg></p>
		<optdesc><p>
		Use this <arg>latency</arg>, in frames, for audio streamed from an AirPlay
    device. The default is 88,200 frames, where there are 44,100
    frames to the second.
    </p></optdesc>
	  </option>

	  <option>
		<p><opt>-B </opt><arg>program</arg><opt> | --on-start=</opt><arg>program</arg></p>
		<optdesc><p>
		Execute <arg>program</arg> when playback is about to begin. Specify the 
		full path to the program, e.g. <file>/usr/bin/logger</file>.
		Executable scripts can be used, but they must have <file>#!/bin/sh</file> (or
		whatever is appropriate) in the headline.</p>
		
		<p>If you want shairport-sync to wait until the command has
		completed before starting to play, select the <opt>-w</opt> option as well.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-c </opt><arg>filename</arg><opt> | --configfile=</opt><arg>filename</arg></p>
		<optdesc><p>
		Read configuration settings from <arg>filename</arg>. The default is to read them from <file>/etc/shairport-sync.conf</file>. For information about configuration settings, see the  "Configuration File Settings" section above.
    </p></optdesc>
	  </option>

	  <option>
		<p><opt>-D | --disconnectFromOutput</opt></p>
		<optdesc><p>
		Disconnect the shairport-sync daemon from the output device and
    exit. (Requires that the daemon has written its PID to an agreed
    file -- see the <opt>-d</opt> option).
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-d | --daemon</opt></p>
		<optdesc><p>
		Instruct shairport-sync to demonise itself. It will write its
    Process ID (PID) to a file, usually at
    <file>/var/run/shairport-sync.pid</file>, which is used by the
    <opt>-k</opt>, <opt>-D</opt> and <opt>-R</opt> options to locate
    the daemon at a later time.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-E </opt><arg>program</arg><opt> | --on-stop=</opt><arg>program</arg></p>
		<optdesc><p>
		Execute <arg>program</arg> when playback has ended. Specify the 
		full path to the program, e.g. <file>/usr/bin/logger</file>.
		Executable scripts can be used, but they must have <file>#!/bin/sh</file> (or
		whatever is appropriate) in the headline.</p>		
		<p>If you want shairport-sync to wait until the command has
		completed before continuing, select the <opt>-w</opt> option as well.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>--forkedDaapdLatency=</opt><arg>latency</arg></p>
		<optdesc><p>
		Use this <arg>latency</arg>, in frames, for audio streamed from a forked-daapd based
    source. The default is 99,400 frames, where there are 44,100
    frames to the second.
    </p></optdesc>
	  </option>
	  
	  <option>
		<p><opt>--get-coverart</opt></p>
		<optdesc><p>
		This option requires the <opt>--meta-dir</opt> option to be set, and enables
		shairport-sync to request cover art from the source and to transmit it through
		the metadata pipe.</p>
		<p>Please note that cover art data may be very large, and may place too great a
		burden on your network.
    </p></optdesc>
	  </option>

	  <option>
		<p><opt>-h | --help</opt></p>
		<optdesc><p>
		Print brief help message and exit.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-i | --iTunesLatency=</opt><arg>latency</arg></p>
		<optdesc><p>
		Use this <arg>latency</arg>, in frames, for audio streamed from an iTunes
    source, where iTunes is Version 10 or later. The default is 99,400 frames, where there are 44,100
    frames to the second. If the source is iTunes but is earler than Version 10, the <arg>default latency</arg> is used (see the <opt>-L</opt> option). Some third party programs masquerade as older versions of iTunes.
    </p></optdesc>
	  </option>

	  <option>
		<p><opt>-k | --kill</opt></p>
		<optdesc><p>
		Kill the shairport-sync daemon and exit. (Requires that the daemon has
		written its PID to an agreed file -- see the <opt>-d</opt> option).
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-L | --latency=</opt><arg>latency</arg></p>
		<optdesc><p>
		Use this to set the <arg>default latency</arg>, in frames, for audio coming from an unidentified source or from an iTunes Version 9 or earlier source. The standard value for the <arg>default latency</arg> is 88,200 frames, where there are 44,100
    frames to the second.
    </p></optdesc>
	  </option>

	  <option>
		<p><opt>--meta-dir=</opt><arg>directory</arg></p>
		<optdesc><p>
		Listen for metadata coming from the source and send it, along with metadata from
		shairport-sync itself, to a pipe called <arg>shairport-sync-metadata</arg>
		in the <arg>directory</arg> you specify. If you add the <opt>--get-cover-art</opt> then
		cover art will be sent through the pipe too. See <url href="https://github.com/mikebrady/shairport-sync-metadata-reader"/>
		for a sample metadata reader.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-m </opt><arg>mdnsbackend</arg><opt> | --mdns=</opt><arg>mdnsbackend</arg></p>
		<optdesc><p>
		Force the use of the specified mDNS backend to advertise the
    player on the network. The default is to try all mDNS backends until one
    works.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-o </opt><arg>outputbackend</arg><opt> | --output=</opt><arg>outputbackend</arg></p>
		<optdesc><p>
		Force the use of the specified output backend to play the audio.
    The default is to try the first one. (This is not used at
    present.)
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-p </opt><arg>port</arg><opt> | --port=</opt><arg>port</arg></p>
		<optdesc><p>
		Listen for play requests on <arg>port</arg>. The default is to use port
    5000.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>--password=</opt><arg>secret</arg></p>
		<optdesc><p>
		Require the password <arg>secret</arg> to be able to connect and stream to the service.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-R | --reconnectToOutput</opt></p>
		<optdesc><p>
		Reconnect the shairport-sync daemon to the output device and
    exit. It may take a few seconds to synchronise. (Requires  that
    the daemon has written its PID to an agreed file -- see the <opt>-d</opt>
    option).
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-r </opt><arg>threshold</arg><opt> | --resync=</opt><arg>threshold</arg></p>
		<optdesc><p>
		Resynchronise if timings differ by more than <arg>threshold</arg> frames.
    If the output timing differs from the source timing by more than
    the threshold, output will be muted and a full resynchronisation
    will occur. The default threshold is 2,205 frames, i.e. 50
    milliseconds. Specify <opt>0</opt> to disable resynchronisation.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>--statistics</opt></p>
		<optdesc><p>
		Print some statistics in the standard output, or in the logfile if in daemon mode.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-S </opt><arg>mode</arg><opt> | --stuffing=</opt><arg>mode</arg></p>
		<optdesc><p>
		Stuff the audio stream using the <arg>mode</arg>.  "Stuffing" refers to the
    process of adding or removing frames of audio  to  or  from  the
    stream sent to the output device to keep it exactly in synchrony
    with the player.
    The default mode, <opt>basic</opt>, is normally almost  completely  inaudible.
    The  alternative mode, <opt>soxr</opt>, is even less obtrusive but
    requires much more processing power. For this mode, support for
    libsoxr, the SoX Resampler Library, must be selected when
    shairport-sync is compiled.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-t </opt><arg>timeout</arg><opt> | --timeout=</opt><arg>timeout</arg></p>
		<optdesc><p>
		Exit play mode if the stream disappears for  more  than  <arg>timeout</arg>
    seconds.</p>
    <p>When shairport-sync plays an audio stream, it starts a play
    session and will return a busy signal to any other sources that
    attempt to use it. If the audio stream disappears for longer
    than <arg>timeout</arg> seconds, the play session will be terminated.
    If you  specify a timeout time of <opt>0</opt>,
    shairport-sync will never signal that
    it is busy and will not prevent other sources from "barging in"
    on an existing play session. The default value is 120 seconds.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>--tolerance=</opt><arg>frames</arg></p>
		<optdesc><p>
		Allow playback to be up to <arg>frames</arg> out of exact synchronization before attempting to correct it.
		The default is 88 frames, i.e. 2 ms. The smaller the tolerance, the more likely it is that overcorrection will occur.
		Overcorrection is when more corrections (insertions and deletions) are made than are strictly necessary to keep the stream in sync. Use the <opt>--statistics</opt> option to
		monitor correction levels. Corrections should not greatly exceed net corrections.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-V | --version</opt></p>
		<optdesc><p>
		Print version information and exit.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-v | --verbose</opt></p>
		<optdesc><p>
		Print debug information. Repeat up to three times to get more detail.
		</p></optdesc>
	  </option>

	  <option>
		<p><opt>-w | --wait-cmd</opt></p>
		<optdesc><p>
		Wait for commands specified using <opt>-B</opt> or <opt>-E</opt>  to  complete  before
    continuing execution.
		</p></optdesc>
	  </option>

  <section name="Audio Backend Options">
  <p>These  options are passed to the chosen audio backend. (At present, the
  only backend implemented is for ALSA.) The audio  backend  options  are
  preceded by a <opt>--</opt> symbol to introduce them and to separate them from any
  program options. In this way, option letters can be used  as  program
  options and also as audio backend options without ambiguity.</p>
  <p>In the ALSA backend, audio is sent to an output device
  which you can specify using the <opt>-d</opt> option.
  The output level (the "volume") is controlled using a level control associated with a mixer.
  By default, the mixer is implemented in shairport-sync itself, i.e. the type of
  the mixer is "software".
  To use a level control on a mixer on the sound card, you must (a)
  specify that the mixer's type is "hardware" with the <opt>-t</opt> option;
  (b) you must specify where the mixer is to be found using the <opt>-m</opt> option
  and finally (c) you must specify the name of the level control you are using
  with the <opt>-c</opt> option.</p>
  </section>
  
  <option>
  <p><opt>-c </opt><arg>controlname</arg></p>
  <optdesc><p>
  Use the level control called <arg>controlname</arg> on the hardware mixer for
  controlling volume.
  This is needed if the mixer type is specified, using the <opt>-t</opt> option,
  to be <opt>hardware</opt>. There is no default.
  </p></optdesc>
  </option>

  <option>
  <p><opt>-d </opt><arg>device</arg></p>
  <optdesc><p>
  Use the specified output <arg>device</arg>. You may specify a card, e.g. <opt>hw:0</opt>, in
  which case the default output device on the card will be chosen.
  Alternatively, you can specify a specific device on a card, e.g. <opt>hw:0,0</opt>.
  The default is the device named <opt>default</opt>.
  </p></optdesc>
  </option>

  <option>
  <p><opt>-m </opt><arg>mixer</arg></p>
  <optdesc><p>
  Use the specified hardware <arg>mixer</arg> for volume control. Use this to specify where
  the mixer is to be found. For example, if the mixer is associated with a card,
  as is often the case, specify the card, e.g. <opt>hw:0</opt>.
  If (unusually) the mixer is associated with a specific device on a card,
  specify the device, e.g. <opt>hw:0,1</opt>.
  The default is the device named in the <opt>-d</opt> option,
  if given, or the device named <opt>default</opt>.
  </p></optdesc>
  </option>

  <option>
  <p><opt>-t </opt><arg>devicetype</arg></p>
  <optdesc>
  <p>
  This option is deprecated and is ignored. For your information, its functionality has been automatically incorporated in the -c option
  -- if you specify a mixer name with the -c option, it is assumed that the mixer is implemented in hardware.
  </p></optdesc>
  </option>
	</options>

  <section name="Examples">
  <p>Here is a slightly contrived but typical example:</p>
      <cmd>shairport-sync  <opt>-d</opt>
      <opt>-a "Joe's Stereo"</opt>
      <opt>-S soxr</opt>
      <opt>--</opt>
      <opt>-d hw:1,0</opt>
      <opt>-m hw:1</opt>
      <opt>-c PCM</opt>      
      </cmd>
  <p>The program will run in daemon mode ( <opt>-d</opt> ), will be  visible  as
  "Joe's Stereo" ( <opt>-a "Joe's Stereo"</opt> ) and will use the SoX Resampler
  Library-based stuffing ( <opt>-S soxr</opt> ).
  The audio backend options following the <opt>--</opt> separator specify
  that  the  audio will be output on output 0 of soundcard 1 (
  <opt>-d hw:1,0</opt> ) and will take advantage of the same sound card's mixer ( <opt>-m hw:1</opt> )
  using the level control named "PCM" ( <opt>-c "PCM"</opt> ).
  </p>
  <p>The example above is slightly contrived in order to show the use of the <opt>-m</opt> option.
  Typically, output 0 is the default output of a card,
  so the output device could be written <opt>-d hw:1</opt> and
  then the mixer option would be unnecessary, giving the following, simpler, command:</p>
       <cmd>shairport-sync  <opt>-d</opt>
      <opt>-a "Joe's Stereo"</opt>
      <opt>-S soxr</opt>
      <opt>--</opt>
      <opt>-d hw:1</opt>
      <opt>-c PCM</opt>      
      </cmd>
 
  </section>

	<section name="Credits">
	<p>Mike Brady developed Shairport Sync from the original Shairport by James Laird.</p>
	<p>Shairport Sync can be found at  <url href="https://github.com/mikebrady/shairport-sync."/></p>
  <p>Shairport can be found at <url href="https://github.com/abrasive/shairport."/></p>
	</section>

	<section name="Comments">
	  <p>This man page was written using <manref name="xml2man" section="1"
		  href="http://masqmail.cx/xml2man/"/> by Oliver Kurth.</p>
	</section>

  </manpage>
